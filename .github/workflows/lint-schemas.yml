name: Lint and Test Schemas

on:
  push:
    paths:
      - 'config/prompts/document_types/**'
      - 'scripts/lint_slug_schemas.py'
      - 'improved_loader.py'
      - 'tests/**'
  pull_request:
    paths:
      - 'config/prompts/document_types/**'
      - 'scripts/lint_slug_schemas.py'
      - 'improved_loader.py'
      - 'tests/**'
  workflow_dispatch:

jobs:
  lint-schemas:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
    
    - name: Run schema linter
      run: |
        python scripts/lint_slug_schemas.py
      continue-on-error: true  # Don't fail build on lint issues
    
    - name: Upload registry
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: schema-registry
        path: config/prompts/document_types/registry.json
    
    - name: Run loader tests
      run: |
        python test_schemas_simple.py
    
    - name: Test with pytest (if available)
      run: |
        pytest tests/test_schema_loader.py -v || true
    
    - name: Generate summary
      if: always()
      run: |
        echo "## Schema Validation Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "config/prompts/document_types/registry.json" ]; then
          total=$(python -c "import json; r=json.load(open('config/prompts/document_types/registry.json')); print(len(r))")
          echo "✅ Successfully validated $total document type schemas" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ Registry generation failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Schema Statistics" >> $GITHUB_STEP_SUMMARY
        python -c "
import json
try:
    with open('config/prompts/document_types/registry.json') as f:
        r = json.load(f)
    print(f'- Total schemas: {len(r)}')
    print(f'- With specialist schema: {sum(1 for v in r.values() if v.get(\"has_specialist\"))}')
    print(f'- With additions: {sum(1 for v in r.values() if v.get(\"has_additions\"))}')
    print(f'- With few-shot examples: {sum(1 for v in r.values() if v.get(\"has_few_shot\"))}')
except:
    print('Unable to generate statistics')
        " >> $GITHUB_STEP_SUMMARY